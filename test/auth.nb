title:DotGNU Virtual Identities
=text
<H1>DotGNU Virtual Identities</H1>
With a "Virtual ID" system we mean an integrated solution to the
following problems:
<UL>
<LI><STRONG>Authentication</STRONG>
<P>
Basically, a <EM>Virtual ID</EM> consists in some digital information,
and the user must be able to prove ownership of this Virtual ID.
<P>
<LI><STRONG>Authorization</STRONG>
<P>
A user who has proved ownership of a Virtual ID may be authorized to
access certain information, or perform certain actions.  Webservice
servers must be able to verify this.
<P>
<LI><STRONG>Customization</STRONG>
<P>
Users should be able to customize their internet experience:  There
should be a way in which users can communicate their preferences to
all webservice servers that want to take user preferences into
consideration.  This must be set up in a way that avoids violating the
user's privacy.
<P>
<LI><STRONG>Selected Sharing of Private Data</STRONG>
<P>
There should be a simple way in which a website can request private
information such as email address, postal address, telephone number,
fax number, or credit card number from the user.  Such private
information must never be given to the website without explicit
approval from the user, but the user should not be required to enter
the information every time.
</UL>
<P>
We must NOT create a passport "portal".  That is technically and
morally wrong.  We must create a framework that can be scaled and
deployed at any level desired, whether locally, at an enterprise,
or at a portal.  Authentication and access to private information
should be peer to peer to preserve local storage of those things
which should remain in private users hands.  The ability to migrate
data upward can be provided for, on a selective basis, and controls
must be provided as to who may or may not access specific user
information.
<P>
For extremely high reliability (avoiding any single point of
failure) this framework can be run on top of the DotGNU
Distributed Execution Environment.  (For more information about this
please refer to the <A href="arch.html">DotGNU Platform</A> page.)
<H2>How DotGNU will address these problems</H2>
In the current situation (with Microsoft trying hard to dominate
the auth services market, and nobody really knowing what exactly
the users will want) the only reasonable way for DotGNU to go
forward is to implement several reasonable approaches, and leave
the final decision to the users.
<H2>Suggested terminology</H2>
<UL>
<LI><EM>Profile Host</EM>: Hosts profiles ("virtual identities")
to facilitate remote access.
<LI><EM>Profile Owner</EM>: Owns profile data and controls access to
it.
<LI><EM>Service Provider</EM>: Creates and delivers Web Services that
request profile data.
<UL>
<H2>How you can contribute</H2>
Please start by having a look at the various
<A href="projects.html">official DotGNU projects</A> and
<A href="proposals/active.html">active proposals</A>.  We
encourage you to make your own decision on what you think would
be the best way to implement Virtual Identities, and discuss these
matters on the
<A href="http://subscribe.dotgnu.org/mailman/listinfo/auth">auth
mailing list</A>.  Then you should either join a project that
goes in a good direction, or you are free to start a new,
competing Virtual ID project if you think that none of the existing
projects is a winner.
<HR>
Acknowledgment: The "Profile Host" / "Profile Owner" / "Service
Provider" terminology has been proposed by
<A href="http://members.rogers.com/alberts/">Albert Scherbinsky</A>
in a <A href="http://archive.dotgnu.org/pipermail/auth/2002-January/000432.html">post on the DotGNU Auth mailing list</A>.