<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE content
[
<!--======================================== modify but don't delete ========================================-->
 <!ENTITY base "./">
 <!ENTITY title	"DotGNU Project - DotGNU Platform">
 <!ENTITY this "arch.html">
 <!ENTITY maintainer "&lt;a href=&quot;http://norbert.ch/&quot;&gt;Norbert Bollow&lt;/a&gt; &lt;a href=&quot;mailto:nb@cisto.com&quot;&gt;&_lt_;nb@cisto.com&_gt_;&lt;/a&gt;">
 <!ENTITY modtime "Sun Oct 20 02:03:09 UTC 2002">
<!--======================================== modify but don't delete ========================================-->

<!--======================================== add custom entities here ========================================-->
<!--======================================== add custom entities here ========================================-->

<!--======================================== declared here, defined elsewhere ========================================-->
 <!ENTITY nav.snapshots "">
 <!ENTITY nav.rationale "">
 <!ENTITY nav.info "">
 <!ENTITY nav.debs "">
 <!ENTITY nav.faq "">
 <!ENTITY nav.essays "">
 <!ENTITY nav.proposals "">
 <!ENTITY nav.patent "">
 <!ENTITY nav.projects "">
 <!ENTITY nav.proposals.active "">
 <!ENTITY nav.arch "">
 <!ENTITY nav.see "">
 <!ENTITY nav.phpgw "">
 <!ENTITY nav.pnet "">
 <!ENTITY nav.pnet.lib.status "">
 <!ENTITY nav.pnet.lib.docs "">
 <!ENTITY nav.web_services "">
 <!ENTITY nav.auth "">
 <!ENTITY nav.mail.lists "">
 <!ENTITY nav.mail.pipermail "">
 <!ENTITY nav.mail.announce "">
 <!ENTITY nav.mail.developers "">
 <!ENTITY nav.mail.auth "">
 <!ENTITY nav.mail.arch "">
 <!ENTITY nav.mail.biz "">
 <!ENTITY nav.mail.website "">
 <!ENTITY misc.freedev "">
 <!ENTITY misc.gnu "">
 <!ENTITY misc.dotgnu "">
 <!ENTITY mail.gnu "">
 <!ENTITY mail.dotgnu "">
 <!ENTITY mail.rhysw "">
 <!ENTITY mail.gopal "">
 <!ENTITY mail.minten "">
 <!ENTITY mail.dnicol "">
 <!ENTITY _lt_ "">
 <!ENTITY _gt_ "">
 <!ENTITY _quot_ "">
 <!ENTITY _apos_ "">
 <!ENTITY _amp_ "">
 <!ENTITY nbsp "">
 <!ENTITY copy "">
 <!ENTITY root "">
<!--======================================== declared here, defined elsewhere ========================================-->

<!--======================================== don't touch this stuff ========================================-->
 <!ELEMENT ul (li)+>
 <!ELEMENT ol (li)+>
 <!ELEMENT dl (dt|dd)+>
 <!ELEMENT dt (#PCDATA | include | br | em | strong | code | a | img)*>
 <!ELEMENT li (#PCDATA | include | br | em | strong | code | a | img | ul | ol | dl)*>
 <!ELEMENT dd (#PCDATA | include | br | em | strong | code | a | img | ul | ol | dl)*>
 <!ELEMENT blockquote (#PCDATA | include | br | em | strong | code | a | img | ul | ol | dl)*><!--no nesting blockquotes-->
 <!ELEMENT pre (#PCDATA | include | br | em | strong | code | a)*><!--no images in pre-->
 <!ELEMENT a (#PCDATA | include | br | em | strong | code | img)*><!--no nesting anchors-->
 <!ELEMENT content (#PCDATA | include | p | h1 | h2 | h3 | h4 | pre | blockquote)*><!--block elements only in top level-->
 <!ELEMENT p (#PCDATA | include | br | em | strong | code | a | img)*>
 <!ELEMENT em (#PCDATA | include | br | em | strong | code | a | img)*>
 <!ELEMENT strong (#PCDATA | include | br | em | strong | code | a | img)*>
 <!ELEMENT code (#PCDATA | include | br | em | strong | code | a | img)*>
 <!ELEMENT h1 (#PCDATA | include | br | em | strong | code | a | img)*>
 <!ELEMENT h2 (#PCDATA | include | br | em | strong | code | a | img)*>
 <!ELEMENT h3 (#PCDATA | include | br | em | strong | code | a | img)*>
 <!ELEMENT h4 (#PCDATA | include | br | em | strong | code | a | img)*>
 <!ELEMENT br EMPTY>
 <!ELEMENT img EMPTY>
 <!ELEMENT include EMPTY>
 <!ATTLIST a title CDATA #IMPLIED name NMTOKEN #IMPLIED href CDATA #IMPLIED>
 <!ATTLIST img src CDATA #REQUIRED alt CDATA #REQUIRED align (top|middle|bottom|left|right) #IMPLIED>
 <!ATTLIST include file CDATA #REQUIRED entry NMTOKEN #IMPLIED overwrite (true|false) #IMPLIED>
<!--======================================== don't touch this stuff ========================================-->
]>

<content>
<h1>
 The DotGNU Platform
</h1>
<p>
 The DotGNU Platform will consist of two major components:
</p>
<ul>
 <li>
  <strong>
   DotGNU Secure Execution Environment
  </strong>
  <p>
   The Secure Execution Environment is a component which can download
   bytecode (see below for a discussion of what kinds of bytecode
   will be supported) from the network and execute it in a secure manner.
  </p>
 </li>
 <li>
  <strong>
   DotGNU Distributed Execution Environment
  </strong>
  <p>
   DotGNU's Distributed Execution Environment will be like an
   operating system for a "distributed computer" consisting of
   several instances of the "DotGNU Secure Execution Environment"
   that are running on several computers.  This system must be able
   to take care of replicating databases across all the parts of this
   "distributed computer" and propagating updates.
  </p>
 </li>
</ul>
<p>
 In addition to the DotGNU Platform, we are also working on a
 <a href="&nav.auth;">DotGNU Virtual Identities</a> system.  This system
 will eventually run as an application on the DotGNU Platform, but we
 are also working on a quick-and-dirty proof-of-concept implementation
 that can already be made available before the DotGNU Platform is
 available.
</p>
<h2>
 What kinds of bytecode will the DotGNU Platform support?
</h2>
<p>
 It is important that a fully IL-compatible bytecode system is supported as per 
 the ECMA specs in DotGNU.  It is also important to have alternatives and 
 options possible should this not prove legally possible or require some other 
 ethical compromises with freedom that we should not make.
</p>
<p>
 For this reason DotGNU is taking this "two track approach":
</p>
<ul>
 <li>
  One track is to support a fully IL-compatible bytecode system,
  the C# language spec, and class libs that fully comply with the ECMA
  specs.
 </li>
 <li>
  The other track is based on Java work with supporting class libs.
  This will immediately make it possible to create applications for
  the DotGNU platform in a lot of programming languages.  See
  <include file="navlinks.xml" entry="vmlanguages" /> for details.
 </li>
</ul>
<p>
 This "two track approach" offers both freedom of choice 
 and leverages another, very mature bytecode system, as well as providing 
 options in case of legal dirty tricks.
</p>
<p>
 This approach naturally leads to an architecture of the DotGNU
 platform that will support multiple bytecode formats, so that
 it will be easy to add support for other virtual machines with
 GPL-compatible Free Software licenses, such as
 <include file="navlinks.xml" entry="parrot" />, the bytecode
 system of Perl6.  (In fact Parrot aims to become the bytecode
 language of choice for a whole range of dynamic languages.)
</p>
<h2>
 How you can contribute
</h2>
<p>
 If you would like to contribute to the development of the DotGNU
 Platform, please subscribe to
 <a href="&nav.mail.arch;">DotGNU arch</a>
 mailing list, join the discussions, and find a way in which you can
 help move the project forward.
</p>
</content>